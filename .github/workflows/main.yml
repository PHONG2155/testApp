name: Build Android APK

# Kích hoạt: Chạy khi có push lên nhánh 'main'
on:
  push:
    branches:
      - main # (hoặc 'master' tùy tên nhánh của bạn)

jobs:
  build-apk:
    # Dùng máy chủ Ubuntu ảo, sạch 100%
    runs-on: ubuntu-latest

    steps:
      # Bước 1: Lấy code về
      - name: Lấy code về (Checkout code)
        uses: actions/checkout@v4

      # Bước 2: Cài Java 17 (cần cho Android)
      - name: Thiết lập Java (Setup Java JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Bước 3: Cài Python 3.11
      - name: Thiết lập Python (Setup Python 3.11)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Bước 4: Cài Buildozer
      - name: Cài đặt Buildozer và Cython
        run: |
          python -m pip install --upgrade pip
          pip install buildozer "cython<4.0"

      # Bước 5: Cài đặt các thư viện build hệ thống (libtool)
      # (ĐÂY LÀ BƯỚC SỬA LỖI MỚI NHẤT)
      - name: Cài đặt các thư viện build hệ thống (libtool, etc.)
        run: |
          sudo apt-get update
          sudo apt-get install -y libtool pkg-config build-essential autoconf automake

      # Bước 6: SỬA LỖI (Quan trọng!)
      # Tự động xóa file jnius cũ bị hỏng trong p4a_local
      - name: "[SỬA LỖI] Xóa công thức jnius local bị hỏng"
        run: |
          # Lệnh này sẽ sửa dứt điểm lỗi 'long' bạn gặp ở máy local
          rm -rf p4a_local/recipes/jnius
          echo "Đã xóa công thức jnius local. Sẽ dùng công thức chuẩn."

      # Bước 7: Chạy Build APK
      - name: Chạy Buildozer (Run build)
        run: |
          buildozer android debug

      # Bước 8: Lưu file APK đã build xong
      - name: Tải file APK lên (Upload Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: NextAcademy-debug.apk # Tên file APK sẽ được tải về
          path: bin/NextAcademy-*-debug.apk # Đường dẫn tới file APK

